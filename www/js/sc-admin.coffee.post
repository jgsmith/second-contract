  SC.Router = Backbone.Router.extend
    routes : 
      "": "system"
      "iflib/verb": "verbs"
      "iflib/verb/new": "newVerb"
      "iflib/verb/:id": "verb"
      "iflib": "iflib"
      "worldlib": "worldlib"
      "worldlib/domain": "domains"
      "worldlib/domain/new": "newDomain"
      "worldlib/domain/:id": "domain"
      "login": "login"
      "denied": "denied"
    currentViews :
      "#main": null
      "#sidebar": null

    login: ->
      console.log "Showing login screen"
      this.showView "#main", new SC.Views.Login()

    denied: ->
      this.showView "#main", new SC.Views.Denied()

    system: ->
      me = this
      SC.Models.system.fetch
        success: ->
          me.showView "#main", new SC.Views.System
            model: SC.Models.system
          me.showNav ""

    iflib: ->
      this.showView "#main", new SC.Views.IFLib()
      this.showNav "iflib"

    worldlib: ->
      this.showView "#main", new SC.Views.WorldLib()
      this.showNav "worldlib"

    domains: ->
      me = this
      SC.Collections.domains.fetch
        success: ->
          me.showView "#sidebar", new SC.Views.DomainList
            model: SC.Collections.domains
          me.showNav "worldlib"

    newDomain: ->
      this.showView "#main", new SC.Views.Domain
        model: new SC.Collections.domains.model
      this.showNav "worldlib"

    domain: (id) ->
      this.showView "#main", new SC.Views.Domain
        model: SC.Collections.domains.get id
      this.showNav "worldlib"

    verbs: ->
      me = this
      SC.Collections.verbs.fetch
        success: ->
          me.showView "#sidebar", new SC.Views.VerbList
            model: SC.Collections.verbs
          me.showNav "iflib"

    newVerb: ->
      this.showView "#main", new SC.Views.Verb
        model: new SC.Collections.verbs.model
      this.showNav "iflib"

    verb: (id) ->
      this.showView "#main", new SC.Views.Verb
        model: SC.Collections.verbs.get id
      this.showNav "iflib"

    showView: (selector, view) ->
      if this.currentViews[selector]?.close?
        this.currentViews[selector].close()
      $(selector).html view.render()
      this.currentViews[selector] = view
      view

    showNav: (sel) ->
      if this.currentNav? and this.currentNav != sel
        if this.currentViews["#sidebar"]?.close?
          this.currentViews["#sidebar"].close()
        $("#sidebar").empty()
        delete this.currentViews["#sidebar"]
      this.currentNav = sel
      for el in $(".navbar ul.nav li")
        if el
          if $(el).find("a").attr("href") == "#"+sel
            $(el).addClass "active"
          else
            $(el).removeClass "active"

    before: (callback) ->
      if callback?
        callback.call this
  
  window.location.replace("#login")
  SC.App = new SC.Router
  Backbone.history.start()
  SC.Models.system.on "change:name", (model, name) ->
    $("a.brand").text(name)
  SC.Models.system.fetch
    success: ->
      $("a.brand").text(SC.Models.system.attributes.name)
